@model GuestBookProject.EntityModel.GuestBook

@{
    var Replys = Model.Reply;
}
<style>
    .errorMsg {
        color: red;
    }
</style>
<h2>詳細內容</h2>
<div class="form-horizontal">
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Message, new { cols = 1000, @rows = 5, @class = "form-control", @style = "resize:none", @readonly = true })
        </div>
    </div>
    <p>
        @Html.ActionLink("編輯", "Edit", new { id = Model.Id }) |
        @Html.ActionLink("回到留言板", "Index")
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    回覆者
                </th>
                <th>
                    回覆內容
                </th>
                <th>
                    回覆時間
                </th>
            </tr>
        </thead>
        <tbody id="replyTableBody">
            @foreach (var item in Replys)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReplyUserName)
                    </td>
                    <td width="50%">
                        @Html.DisplayFor(modelItem => item.ReplyMessage)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreateDateTime)
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#replyModal">
        新增回覆
    </button>
</div>

<!-- Modal -->
<div class="modal fade" id="replyModal" tabindex="-1" role="dialog">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">新增回覆</h4>
            </div>
            <div class="modal-body">
                <form id="ReplyForm">
                    <div class="form-group">
                        <label class="control-label">回覆者</label>
                        <input type="text" class="form-control" name="ReplyUserName" id="textReplyUserName">
                        <span class="errorMsg"></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label">回覆內容</label>
                        <input type="text" class="form-control" name="ReplyMessage" id="textReplyMessage">
                        <span class="errorMsg"></span>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">取消</button>
                <button type="submit" class="btn btn-primary" onclick="CreateReply()">確認</button>
            </div>
        </div>
    </div>
</div>
<script id="replyTableBodyTmp" type="text/x-jsrender">
    <tr>
        <td>
            {{:ReplyUserName}}
        </td>
        <td width="50%">
            {{:ReplyMessage}}
        </td>
        <td>
            {{:CreateDateTime}}
        </td>
    </tr>
</script>
<script>

    var replyModalValidator = $("#ReplyForm").validate({
        rules: {
            ReplyUserName: {
                required: true
            },
            ReplyMessage: {
                required: true
            }
        },
        messages: {
            ReplyUserName: {
                required: "回覆者不可為空"
            },
            ReplyMessage: {
                required: "回覆內容不可為空"
            }
        },
        errorPlacement: function (error, element) {
            error.appendTo(element.next("span"));
        },
    })

    $('#replyModal').on('hidden.bs.modal', function (e) {
        document.getElementById("ReplyForm").reset();
        replyModalValidator.resetForm();
    })

    function CreateReply() {
        var validateState = $("#ReplyForm").valid();
        if (!validateState) {
            return false;
        }

        var elements = document.getElementById("ReplyForm").elements;
        var replyObject = {GuestBookId: "@Model.Id"};
        for (var i = 0; i < elements.length; i++) {
            var item = elements.item(i);
            replyObject[item.name] = item.value;
        }
        $.post("@Url.Action("CreateReply")", { reply: replyObject },
            function (data) {
                console.log(data);
                $('#replyModal').modal('hide');
                var tmpl = $.templates("#replyTableBodyTmp");
                var html = tmpl.render(data);
                $("#replyTableBody").html(html);               
            }
        );
    }
</script>
